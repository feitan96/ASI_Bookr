@using ASI.Basecode.Services.ServiceModels;
@model ASI.Basecode.Services.ServiceModels.BookingViewModel

@{
    var rooms = ViewData["RoomsList"] as List<RoomViewModel> ?? new List<RoomViewModel>();
    var users = ViewData["UsersList"] as List<UserViewModel> ?? new List<UserViewModel>();
}

    <form id="createBookingForm" asp-action="Book" method="post">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <!-- Meeting Title -->
        <div class="form-group">
            <label asp-for="Title" class="control-label">Meeting Title<span style="color: red;">*</span></label>
            <input asp-for="Title" class="form-control" type="text" placeholder="Title" />
            <span asp-validation-for="Title" class="text-danger"></span>
        </div>

        <!-- Room Selection Button -->
        <div class="form-group">
            <label class="control-label">Select Room<span style="color: red;">*</span></label>
            <button type="button" id="selectRoomBtn" class="btn btn-outline-primary form-control" onclick="openModal('@Url.Action("RoomSelection", "Booking")', 'crudModal2', 'Select a Room')">
                Select a Room
            </button>
            <input type="hidden" asp-for="RoomId" id="RoomId" required/>
            <div id="roomSelectionContainer" class="roomSelectionContainer">
                <!-- Room Selection Content (Updates if room is selected) -->
            </div>
            <span asp-validation-for="RoomId" class="text-danger"></span>
        </div>

        <!-- User Selection -->
        <div class="form-group">
            <label class="control-label">Select User<span style="color: red;">*</span></label>
            <button type="button" id="selectRoomBtn" class="btn btn-outline-primary form-control" onclick="openModal('@Url.Action("UserSelection", "Booking")', 'crudModal2', 'Select User')">
                Select User
            </button>
            <input type="hidden" asp-for="UserId" id="UserId" required/>
            <input type="hidden" id="UserFullName" value="" />
            <div id="userSelectionContainer" class="userSelectionContainer">
                <!-- User Selection Content (Updates if user is selected) -->
            </div>
            <span asp-validation-for="UserId" class="text-danger"></span>
        </div>

        <!-- Booking Check In Date and Time -->
        <div class="form-group">
            <label asp-for="BookingStartDate" class="control-label">Booking Start Date</label>
            <input asp-for="BookingStartDate" id="BookingStartDate" class="form-control booking-date-input" type="text" placeholder="Start Date" />
            <span asp-validation-for="BookingStartDate" class="text-danger"></span>
        </div>

         <div class="form-group">
            <label asp-for="CheckInTimeString" class="control-label">Check In Time</label>
            <input asp-for="CheckInTimeString" id="CheckInTime" class="form-control booking-time-input" type="text" placeholder="Check In Time" />
            <span asp-validation-for="CheckInTimeString" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="CheckOutTimeString" class="control-label">Check Out Time</label>
            <input asp-for="CheckOutTimeString" id="CheckOutTime" class="form-control booking-time-input" type="text" placeholder="Check Out Time" />
            <span asp-validation-for="CheckOutTimeString" class="text-danger"></span>
        </div>
        
        
        <!-- Is Recurring -->
        <div class="form-group">
            <label asp-for="IsRecurring" class="control-label">Is Recurring?<span style="color: red;">*</span></label>
            <select asp-for="IsRecurring" id="IsRecurring" class="form-control">
                <option value="false">No</option>
                <option value="true">Yes</option>
            </select>
            <span asp-validation-for="IsRecurring" class="text-danger"></span>
        </div>

        <!-- Contents here for choosing non-recurring or recurring booking -->
        <div class="recurring-booking-form" hidden="true">
            <!-- Booking Check Out Date and Time -->
            <div class="form-group">
                <label asp-for="BookingEndDate" class="control-label">Recurring End Date</label>
                <input asp-for="BookingEndDate" id="BookingEndDate" class="form-control booking-date-input" type="text" placeholder="End Date" />
                <span asp-validation-for="BookingEndDate" class="text-danger"></span>
            </div>

            <!-- Hidden input for selected days -->
            <input type="hidden" asp-for="SelectedDays" id="selectedDays" name="SelectedDays" />

            <label id="DaySelections" class="control-label">Select Days<span style="color: red;">*</span></label>
            <div class="day-selector d-flex flex-wrap justify-content-between mb-3">
                <button type="button" style="width:70px;" class="btn btn-outline-primary day-option" data-day="Monday">Mon</button>
                <button type="button" style="width:70px;" class="btn btn-outline-primary day-option" data-day="Tuesday">Tue</button>
                <button type="button" style="width:70px;" class="btn btn-outline-primary day-option" data-day="Wednesday">Wed</button>
                <button type="button" style="width:70px;" class="btn btn-outline-primary day-option" data-day="Thursday">Thu</button>
                <button type="button" style="width:70px;" class="btn btn-outline-primary day-option" data-day="Friday">Fri</button>
                <button type="button" style="width:70px;" class="btn btn-outline-primary day-option" data-day="Saturday">Sat</button>
            </div>
        
        </div>


        <!-- Status -->
        <div class="form-group">
            <label asp-for="Status" class="control-label">Status<span style="color: red;">*</span></label>
            <select asp-for="Status" class="form-control">
                <option value="Pending">Pending</option>
                <option value="Approved">Approve</option>
                <option value="Disapproved">Disapprove</option>
                <option value="Cancelled">Cancel</option>
            </select>
            <span asp-validation-for="Status" class="text-danger"></span>
        </div>


        <!-- Submit Button -->
    <div class="form-group d-flex justify-content-end">
        <!-- Cancel Button as a Button (Triggers closing the modal) -->
        <button type="button" class="btn mr-2 cancel-modal" onclick="closeModal('crudModal1')">Cancel</button>
        <!-- Submit Button -->
        <input type="submit" value="Create Booking" class="btn submit-modal" />
    </div>
    </form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Check for error message and display Toastr notification
        var errorMessage = '@TempData["ErrorMessage"]';
        if (errorMessage) {
            toastr.error(errorMessage);
        }

    </script>
}