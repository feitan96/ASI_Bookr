@using ASI.Basecode.Services.ServiceModels
@model UserPaginationViewModel

<table class="table table-striped">
    <thead>
        <tr>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Email</th>
            <th>Role</th>
            <th>Phone Number</th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (!Model.Users.Any())
        {
            <tr>
                <td colspan="7" class="text-center">
                    <div class="alert alert-light" role="alert">
                        No users found.
                    </div>
                </td>
            </tr>
        }
        else
        {
            @foreach (var user in Model.Users.Where(u => u.Role != "Superadmin"))
            {
                <tr>
                    <td>@user.FirstName</td>
                    <td>@user.LastName</td>
                    <td>@user.Email</td>
                    <td>@user.Role</td>
                    <td>@user.PhoneNumber</td>
                    <td>
                        <button onclick="openModal('@Url.Action("Edit", "UserManagement", new { Id = user.Id })')" class="btn btn-warning btn-sm pr-0">
                            <svg style="width:15px; margin-right:8px;" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M471.6 21.7c-21.9-21.9-57.3-21.9-79.2 0L362.3 51.7l97.9 97.9 30.1-30.1c21.9-21.9 21.9-57.3 0-79.2L471.6 21.7zm-299.2 220c-6.1 6.1-10.8 13.6-13.5 21.9l-29.6 88.8c-2.9 8.6-.6 18.1 5.8 24.6s15.9 8.7 24.6 5.8l88.8-29.6c8.2-2.7 15.7-7.4 21.9-13.5L437.7 172.3 339.7 74.3 172.4 241.7zM96 64C43 64 0 107 0 160L0 416c0 53 43 96 96 96l256 0c53 0 96-43 96-96l0-96c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 96c0 17.7-14.3 32-32 32L96 448c-17.7 0-32-14.3-32-32l0-256c0-17.7 14.3-32 32-32l96 0c17.7 0 32-14.3 32-32s-14.3-32-32-32L96 64z" /></svg>
                        </button>
                        <button style="background-color:var(--color1); border:none;" onclick="openModal('@Url.Action("Delete", "UserManagement", new { Id = user.Id })')" class="btn btn-danger btn-sm pr-0">
                            <svg style="width:15px; margin-right:8px; fill:white;" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M135.2 17.7L128 32 32 32C14.3 32 0 46.3 0 64S14.3 96 32 96l384 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-96 0-7.2-14.3C307.4 6.8 296.3 0 284.2 0L163.8 0c-12.1 0-23.2 6.8-28.6 17.7zM416 128L32 128 53.2 467c1.6 25.3 22.6 45 47.9 45l245.8 0c25.3 0 46.3-19.7 47.9-45L416 128z" /></svg>
                        </button>
                    </td>
                    <td>
                        <svg style="width:15px; margin-right:8px;" onclick="openModal('@Url.Action("View", "UserManagement", new { Id = user.Id })')" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M8 256a56 56 0 1 1 112 0A56 56 0 1 1 8 256zm160 0a56 56 0 1 1 112 0 56 56 0 1 1 -112 0zm216-56a56 56 0 1 1 0 112 56 56 0 1 1 0-112z" /></svg>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

<div class="d-flex justify-content-center mt-3">
    <ul class="pagination">
        <li class="page-item @(Model.Users.Any() ? (Model.CurrentPage == 1 ? "disabled" : "") : "disabled")">
            <a class="page-link" href="#" onclick="changePage(1)">First</a>
        </li>
        <li class="page-item @(Model.Users.Any() ? (Model.CurrentPage == 1 ? "disabled" : "") : "disabled")">
            <a class="page-link" href="#" onclick="changePage(@(Model.CurrentPage - 1))">Previous</a>
        </li>

        @* Ellipsis Logic *@
        @{
            int totalPages = Model.TotalPages;
            int currentPage = Model.CurrentPage;
            int maxVisiblePages = 5; // Maximum number of visible pages (adjust as needed)
            int halfVisiblePages = maxVisiblePages / 2;

            int startPage = currentPage > halfVisiblePages
            ? Math.Max(1, currentPage - halfVisiblePages)
            : 1;

            int endPage = currentPage > halfVisiblePages
            ? Math.Min(totalPages, currentPage + halfVisiblePages)
            : Math.Min(totalPages, maxVisiblePages);

            // Ensure the visible range remains consistent when near the last page
            if (endPage - startPage + 1 < maxVisiblePages)
            {
                if (currentPage <= halfVisiblePages)
                {
                    endPage = Math.Min(totalPages, startPage + maxVisiblePages - 1);
                }
                else if (currentPage > totalPages - halfVisiblePages)
                {
                    startPage = Math.Max(1, endPage - maxVisiblePages + 1);
                }
            }

            // Display ellipsis and pages
            if (startPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="#" onclick="changePage(1)">1</a>
                </li>
                if (startPage > 2)
                {
                    <li class="page-item disabled">
                        <span class="page-link">...</span>
                    </li>
                }
            }

            for (int i = startPage; i <= endPage; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link" href="#" onclick="changePage(@i)">@i</a>
                </li>
            }

            if (endPage < totalPages)
            {
                if (endPage < totalPages - 1)
                {
                    <li class="page-item disabled">
                        <span class="page-link">...</span>
                    </li>
                }
                <li class="page-item">
                    <a class="page-link" href="#" onclick="changePage(@totalPages)">@totalPages</a>
                </li>
            }
        }

        <li class="page-item @(Model.Users.Any() ? (Model.CurrentPage == Model.TotalPages ? "disabled" : "") : "disabled")">
            <a class="page-link" href="#" onclick="changePage(@(Model.CurrentPage + 1))">Next</a>
        </li>
        <li class="page-item @(Model.Users.Any() ? (Model.CurrentPage == Model.TotalPages ? "disabled" : "") : "disabled")">
            <a class="page-link" href="#" onclick="changePage(@Model.TotalPages)">Last</a>
        </li>
    </ul>
</div>
@if (!Model.Users.Any())
{
    <div class="alert alert-light text-center mt-3" role="alert">
        No users found.
    </div>
}
