@using ASI.Basecode.Services.ServiceModels;
@model IEnumerable<ASI.Basecode.Services.ServiceModels.RoomViewModel>
@{
    ViewData["Title"] = "Index";
    var amenities = ViewData["AmenitiesList"] as List<AmenityViewModel> ?? new List<AmenityViewModel>();
}

<h1>Room Management</h1>

<div class="form-row mb-3 align-items-end">
    <!-- Search Room Name Textbox (Col-2) -->
    <div class="col-md-2">
        <input type="text" id="searchRoomName" class="form-control" placeholder="Search Room Name" />
    </div>

    <!-- Type Dropdown (Col-2) -->
    <div class="col-md-2">
        <select id="typeFilter" class="form-control">
            <option value="">Select Type</option>
            <option value="MeetingRoom">Meeting Room (Has TV)</option>
            <option value="PrivateRoom">Private Room (Personal space for any work)</option>
            <option value="StudyRoom">Study Room (Designed for studying)</option>
            <option value="ConferenceRoom">Conference Room (Has TV and whiteboard)</option>
            <option value="WorkshopRoom">Workshop Room (Has whiteboard only)</option>
        </select>
    </div>

    <!-- Location Dropdown (Col-2) -->
    <div class="col-md-2">
        <select id="locationFilter" class="form-control">
            <option value="">Select Location</option>
            <option value="FocusRoom">Focus Room (Dedicated space for quiet work and concentration)</option>
            <option value="Lounge">Lounge (Casual area for relaxation and informal meetings)</option>
            <option value="InnovationLab">Innovation Lab (Room designed for brainstorming and project development)</option>
            <option value="ResourceCenter">Resource Center (Equipped with tools and materials for research and study)</option>
        </select>
    </div>

    <!-- Capacity Input (Col-1) -->
    <div class="col-md-1">
        <input type="number" id="capacityFilter" class="form-control" placeholder="Min Capacity" />
    </div>

    <!-- Amenities Multi-Select Dropdown (Col-3) -->
    <div class="col-md-3">
        <select data-placeholder="Input amenities to filter..." size="2" id="amenitiesFilter" class="form-control chosen-select" multiple name="test">
            @foreach (var amenity in amenities)
            {
                <option value="@amenity.AmenityId">@amenity.AmenityName</option>
            }
        </select>
    </div>


    <!-- Search Button (Col-1) -->
    <div class="col-md-1">
        <button id="searchButton" class="btn btn-primary btn-block">Search</button>
    </div>

    <!-- Show All Button (Col-1) -->
    <div class="col-md-1">
        <button id="showAllButton" class="btn btn-primary btn-block">Show All</button>
    </div>
</div>

<p>
    <button class="btn btn-primary mb-3" onclick="openModal('@Url.Action("Create", "Room")')">Add New Rooms</button>
</p>

<!-- Room Table -->
<div id="roomTable">
    @Html.Partial("_RoomList", Model) <!-- Default show all the rooms -->
</div>


@section Scripts {
    <script>
        $(".chosen-select").chosen({
            no_results_text: "Oops, amenity not found!"
        });

        // Open modal and load content
        function openModal(url) {
            $.get(url, function (data) {
                $('#crudModal .modal-body').html(data);
                $('#crudModal').modal('show');
            });
        }

        // Handle form submission within modal
        $(document).on('submit', 'form', function (e) {
            e.preventDefault();
            var form = $(this);
            var formData = new FormData(this);

            $.ajax({
                type: form.attr('method'),
                url: form.attr('action'),
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    $('#crudModal').modal('hide');
                    location.reload(); // Reload page or update data to reflect changes
                },
                error: function (xhr) {
                    alert('An error occurred. Please try again.');
                }
            });
        });


        // Handle image deletion inside the modal
        $(document).on('click', '.delete-image-btn', function (event) {
            event.preventDefault();
            console.log("Delete button clicked.");

            const imageId = $(this).data('image-id');
            const imageGuid = $(this).data('image-guid');
            console.log("Image GUID" + imageGuid);


            if (confirm("Are you sure you want to delete this image?")) {
                $.ajax({
                    url: '@Url.Action("DeleteImage", "Room")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ imageId: imageId }),
                    success: function (response) {
                        console.log("AJAX response:", response);

                        if (response.success) {
                            toastr.success("Image deleted successfully.");
                            $(`button[data-image-id="${imageId}"]`).closest('.carousel-item').remove();

                            // Update the active item in the carousel
                            if ($('#roomImagesCarousel .carousel-item.active').length === 0) {
                                $('#roomImagesCarousel .carousel-item').first().addClass('active');
                            }

                            // Hide carousel if no images are left
                            if ($('#roomImagesCarousel .carousel-item').length === 0) {
                                $('#roomImagesCarousel').hide();
                            }
                        } else {
                            toastr.error(response.message || "Failed to delete the image.");
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("AJAX error:", status, error);
                        toastr.error("An error occurred while trying to delete the image.");
                    }
                });
            }
        });

    </script>
    <script>
        $(document).ready(function () {
            $('#showAllButton').on('click', function () {
                showAllRooms();
            });

            // Function to reset filters and show all rooms
            function showAllRooms() {
                // Clear all filter inputs
                $('#searchRoomName').val('');
                $('#typeFilter').val('');
                $('#locationFilter').val('');
                $('#capacityFilter').val('');
                $('#amenitiesFilter').val([]).trigger("chosen:updated");

                // Make an AJAX request to show all rooms
                $.ajax({
                    url: '@Url.Action("Search", "Room")',
                    type: 'GET',
                    success: function (result) {
                        $('#roomTable').html(result);
                    },
                    error: function (xhr) {
                        alert('An error occurred while fetching all rooms.');
                    }
                });
            }

            // Trigger search when the search button is clicked
            $('#searchButton').on('click', function () {
                performSearch();
            });

            // Function to perform AJAX search and filtering
            function performSearch() {
                const roomName = $('#searchRoomName').val();
                const roomType = $('#typeFilter').val();
                const roomLocation = $('#locationFilter').val();
                const roomCapacity = $('#capacityFilter').val();

                // Collect selected amenities as an array
                const selectedAmenities = $('#amenitiesFilter').val() || []; // Default to empty array if none selected

                // Create an object with all the parameters
                const params = {
                    roomName: roomName,
                    type: roomType,
                    location: roomLocation,
                    capacity: roomCapacity,
                    amenities: selectedAmenities // Array of selected amenities
                };

                // Convert the params object to a URL-encoded string
                const url = '@Url.Action("Search", "Room")?' + $.param(params);

                $.ajax({
                    url: url,
                    type: 'GET',
                    success: function (result) {
                        $('#roomTable').html(result);
                    },
                    error: function (xhr) {
                        alert('An error occurred while filtering the rooms.');
                    }
                });
            }
        });
    </script>
}
