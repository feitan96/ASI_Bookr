@using ASI.Basecode.Services.ServiceModels
@model IEnumerable<ASI.Basecode.Services.ServiceModels.RoomViewModel>

@{
    ViewData["Title"] = "Index";
    var amenities = ViewData["AmenitiesList"] as List<AmenityViewModel> ?? new List<AmenityViewModel>();
}

<h1>Room Management</h1>

<div class="form-row mb-4 align-items-end">
    <!-- Search Room Name Textbox (Col-2) -->
    <div class="col-md-2">
        <input type="text" id="searchRoomName" class="form-control" placeholder="Search Room Name" />
    </div>

    <!-- Type Dropdown (Col-2) -->
    <div class="col-md-3">
        <select id="typeFilter" class="form-control">
            <option value="">Select Type</option>
            <option value="MeetingRoom">Meeting Room (Has TV)</option>
            <option value="PrivateRoom">Private Room (Personal space for any work)</option>
            <option value="StudyRoom">Study Room (Designed for studying)</option>
            <option value="ConferenceRoom">Conference Room (Has TV and whiteboard)</option>
            <option value="WorkshopRoom">Workshop Room (Has whiteboard only)</option>
        </select>
    </div>

    <!-- Location Dropdown (Col-2) -->
    <div class="col-md-2">
        <select id="locationFilter" class="form-control">
            <option value="">Select Location</option>
            <option value="FocusRoom">Focus Room (Dedicated space for quiet work and concentration)</option>
            <option value="Lounge">Lounge (Casual area for relaxation and informal meetings)</option>
            <option value="InnovationLab">Innovation Lab (Room designed for brainstorming and project development)</option>
            <option value="ResourceCenter">Resource Center (Equipped with tools and materials for research and study)</option>
        </select>
    </div>

    <!-- Capacity Input (Col-1) -->
    <div class="col-md-1">
        <input type="number" id="capacityFilter" class="form-control" min="1" max="20" placeholder="Min Capacity" />
    </div>

    <!-- Amenities Multi-Select Dropdown (Col-3) -->
    <div class="col-md-3">
        <select data-placeholder="Input amenities to filter..." size="2" id="amenitiesFilter" class="form-control chosen-select" multiple name="test">
            @foreach (var amenity in amenities)
            {
                <option value="@amenity.AmenityId">@amenity.AmenityName</option>
            }
        </select>
    </div>

    <div class="ml-2">
        <button id="clearFiltersButton" class="btn btn-primary btn-block px-0" style="background-color: transparent; border: none;">
            <svg style="width: 32px; fill: var(--color1);" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"><path d="M3.9 22.9C10.5 8.9 24.5 0 40 0L472 0c15.5 0 29.5 8.9 36.1 22.9s4.6 30.5-5.2 42.5L396.4 195.6C316.2 212.1 256 283 256 368c0 27.4 6.3 53.4 17.5 76.5c-1.6-.8-3.2-1.8-4.7-2.9l-64-48c-8.1-6-12.8-15.5-12.8-25.6l0-79.1L9 65.3C-.7 53.4-2.8 36.8 3.9 22.9zM432 224a144 144 0 1 1 0 288 144 144 0 1 1 0-288zm59.3 107.3c6.2-6.2 6.2-16.4 0-22.6s-16.4-6.2-22.6 0L432 345.4l-36.7-36.7c-6.2-6.2-16.4-6.2-22.6 0s-6.2 16.4 0 22.6L409.4 368l-36.7 36.7c-6.2 6.2-6.2 16.4 0 22.6s16.4 6.2 22.6 0L432 390.6l36.7 36.7c6.2 6.2 16.4 6.2 22.6 0s6.2-16.4 0-22.6L454.6 368l36.7-36.7z" /></svg>
        </button>
    </div>
</div>

<div class="mt-sm-4 d-flex align-content-center justify-content-between">
    <button style="background-color: var(--color2); color:var(--color1); border:none;" class="btn btn-primary mt-2 mb-2" onclick="openModal('@Url.Action("Create", "Room")')">
        <svg style="fill:var(--color1); width: 18px; margin-right: 10px;" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM232 344l0-64-64 0c-13.3 0-24-10.7-24-24s10.7-24 24-24l64 0 0-64c0-13.3 10.7-24 24-24s24 10.7 24 24l0 64 64 0c13.3 0 24 10.7 24 24s-10.7 24-24 24l-64 0 0 64c0 13.3-10.7 24-24 24s-24-10.7-24-24z" /></svg>
    Add New Rooms
    </button>
    <button id="toggleViewBtn" class="btn btn-secondary mt-2 mb-2">Switch to Card View</button>
</div>

<!-- Room Views -->
<div id="roomListView" class="room-view">
    <!-- Room Table -->
    <table class="table table-striped">
        <thead>
            <tr>
                @*<th>@Html.DisplayNameFor(model => model.Items.FirstOrDefault().Name)</th>
                <th>@Html.DisplayNameFor(model => model.Items.FirstOrDefault().Description)</th>
                <th>@Html.DisplayNameFor(model => model.Items.FirstOrDefault().Type)</th>
                <th>@Html.DisplayNameFor(model => model.Items.FirstOrDefault().Capacity)</th>
                <th>@Html.DisplayNameFor(model => model.Items.FirstOrDefault().Location)</th>
                <th>Amenities</th>*@
                <th>@Html.DisplayNameFor(model => model.Name)</th>
                <th>@Html.DisplayNameFor(model => model.Description)</th>
                <th>@Html.DisplayNameFor(model => model.Type)</th>
                <th>@Html.DisplayNameFor(model => model.Capacity)</th>
                <th>@Html.DisplayNameFor(model => model.Location)</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var room in Model)
            {
                <tr>
                    <td>@room.Name</td>
                    <td>@room.Description</td>
                    <td>@room.Type</td>
                    <td>@room.Capacity</td>
                    <td>@room.Location</td>
                    <td>
                        <button onclick="openModal('@Url.Action("Edit", "Room", new { roomId = room.RoomId })')" class="btn btn-warning btn-sm pr-0">
                            <svg style="width:15px; margin-right:8px;" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M471.6 21.7c-21.9-21.9-57.3-21.9-79.2 0L362.3 51.7l97.9 97.9 30.1-30.1c21.9-21.9 21.9-57.3 0-79.2L471.6 21.7zm-299.2 220c-6.1 6.1-10.8 13.6-13.5 21.9l-29.6 88.8c-2.9 8.6-.6 18.1 5.8 24.6s15.9 8.7 24.6 5.8l88.8-29.6c8.2-2.7 15.7-7.4 21.9-13.5L437.7 172.3 339.7 74.3 172.4 241.7zM96 64C43 64 0 107 0 160L0 416c0 53 43 96 96 96l256 0c53 0 96-43 96-96l0-96c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 96c0 17.7-14.3 32-32 32L96 448c-17.7 0-32-14.3-32-32l0-256c0-17.7 14.3-32 32-32l96 0c17.7 0 32-14.3 32-32s-14.3-32-32-32L96 64z" /></svg>
                        </button>
                        <button onclick="openModal('@Url.Action("Delete", "Room", new { roomId = room.RoomId })')" class="btn btn-danger btn-sm pr-0">
                            <svg style="width:15px; margin-right:8px; fill:white;" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M135.2 17.7L128 32 32 32C14.3 32 0 46.3 0 64S14.3 96 32 96l384 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-96 0-7.2-14.3C307.4 6.8 296.3 0 284.2 0L163.8 0c-12.1 0-23.2 6.8-28.6 17.7zM416 128L32 128 53.2 467c1.6 25.3 22.6 45 47.9 45l245.8 0c25.3 0 46.3-19.7 47.9-45L416 128z" /></svg>
                        </button>
                    </td>
                    <td>
                        <svg style="width:15px; margin-right:8px;" onclick="openModal('@Url.Action("View", "Room", new { roomId = room.RoomId })')" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M8 256a56 56 0 1 1 112 0A56 56 0 1 1 8 256zm160 0a56 56 0 1 1 112 0 56 56 0 1 1 -112 0zm216-56a56 56 0 1 1 0 112 56 56 0 1 1 0-112z" /></svg>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<style>
    .chosen-container-multi .chosen-choices {
        max-height: 37px; /* Adjust this value to your desired height */
        min-height: 37px;
        overflow-y: scroll;
        border-radius: 5px;
        border-color: #CED4DA;
    }
    
    .chosen-container-multi .chosen-choices li.search-field input[type="text"] {
        height: 37px; 
        font-size: 18px;
    }

    .chosen-container-multi .chosen-choices li.search-choice {
        box-shadow: none !important;
        background-image: none !important;
        background-color: #f0f0f0 !important;
        border: 1px solid #ddd !important;
        font-size: 15px;
    }
</style>

<div id="roomCardView" class="room-view" style="display: none;">
    <div class="row">
        @foreach (var room in Model)
        {
            <div class="col-md-4">
                @Html.Partial("_RoomCard", room)
            </div>
        }
    </div>
</div>


<!-- Pagination Controls -->
@*<div class="pagination">
    @if (Model.PageNumber > 1)
    {
        <a class="btn btn-secondary" asp-action="Index" asp-route-pageNumber="@(Model.PageNumber - 1)" asp-route-pageSize="@Model.PageSize">Previous</a>
    }
    @for (int i = 1; i <= Model.TotalPages; i++)
    {
        <a class="btn @(Model.PageNumber == i ? "btn-primary" : "btn-secondary")" asp-action="Index" asp-route-pageNumber="@i" asp-route-pageSize="@Model.PageSize">@i</a>
    }
    @if (Model.PageNumber < Model.TotalPages)
    {
        <a class="btn btn-secondary" asp-action="Index" asp-route-pageNumber="@(Model.PageNumber + 1)" asp-route-pageSize="@Model.PageSize">Next</a>
    }
</div>*@

<!-- Modal -->
<div id="crudModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <!-- Content will be loaded here -->
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(".chosen-select").chosen({
            no_results_text: "Oops, amenity not found!"
        });

        function openModal(url) {
            $.get(url, function (data) {
                $('#crudModal .modal-body').html(data);
                $('#crudModal').modal('show');
                $.validator.unobtrusive.parse('#crudModal .modal-body');
            });

        }

        $(document).on('submit', 'form', function (e) {
            e.preventDefault();
            var form = $(this);
            var formData = new FormData(this);

            $.ajax({
                type: form.attr('method'),
                url: form.attr('action'),
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    $('#crudModal').modal('hide');
                    location.reload();
                },
                error: function (xhr) {
                    if (xhr.status === 400) {
                        $('#crudModal .modal-body').html(xhr.responseText);
                        $.validator.unobtrusive.parse('#crudModal .modal-body');
                    } else {
                        alert('An error occurred. Please try again.');
                    }
                }
            });
        });

        // Trigger performSearch when any filter changes
        $('#searchRoomName, #typeFilter, #locationFilter, #capacityFilter, #amenitiesFilter').on('change keyup', function () {
            performSearch();
        });

        // Bind clearFilters function to the Clear Search/Filter button
        $('#clearFiltersButton').on('click', function () {
            clearFilters();
        });

        function performSearch() {
            const roomName = $('#searchRoomName').val();
            const roomType = $('#typeFilter').val();
            const roomLocation = $('#locationFilter').val();
            const roomCapacity = $('#capacityFilter').val();
            const selectedAmenities = $('#amenitiesFilter').val() || [];

            const params = {
                roomName: roomName,
                type: roomType,
                location: roomLocation,
                capacity: roomCapacity,
                amenities: selectedAmenities
            };

            const url = '@Url.Action("Search", "Room")?' + $.param(params);

            $.ajax({
                url: url,
                type: 'GET',
                success: function (result) {
                    $('#roomTable').html(result);
                },
                error: function () {
                    alert('An error occurred while filtering the rooms.');
                }
            });
        }

        function clearFilters() {
            // Clear all filter inputs
            $('#searchRoomName').val('');
            $('#typeFilter').val('');
            $('#locationFilter').val('');
            $('#capacityFilter').val('');
            $('#amenitiesFilter').val([]).trigger("chosen:updated");

            // Reload the table with default data
            $.ajax({
                url: '@Url.Action("Search", "Room")',
                type: 'GET',
                success: function (result) {
                    $('#roomTable').html(result);
                },
                error: function () {
                    alert('An error occurred while fetching all rooms.');
                }
            });
        }
    </script>
}